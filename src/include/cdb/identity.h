#ifndef CDB_IDENTITY_H
#define CDB_IDENTITY_H

#include "postgres.h"

typedef enum CdbNodeRole
{
    CDB_NODE_ROLE_INVALID,
    CDB_NODE_ROLE_INITDB,
    CDB_NODE_ROLE_MASTER,
    CDB_NODE_ROLE_SEGMENT,
    CDB_NODE_ROLE_GTM,
    CDB_NODE_ROLE_CATALOGSERVICE,
} CdbNodeRole;

#define CDB_NODE_IDENTITY_NAME_LENGTH    256

typedef struct ProcessIdentity
{
    bool        init;

    /* Member that assign by Dispatcher. */
    int         slice_id;           /* slice id. */
    int         id_in_slice;        /* index in the slice. allocate during dispatch */
    int         gang_member_num;    /* num of qes in the slice. */
    int         command_count;      /* gp_command_count */
    //bool        is_writer;    /* Metadata dispatch needs query executor access heap interface, so combocid need it. */
    TransactionId   xid;

    /* Member that generated by above data. */
    char        name[CDB_NODE_IDENTITY_NAME_LENGTH]; /* Query Executor Name */

    //ProcessFunctionList function;
} ProcessIdentity;

typedef struct CdbNodeIdentity
{
	CdbNodeRole role;

    /*
     * There are two level identitiers for each process. One is node name,
     * which is used to locate the physical server, another one is Query
     * executor id, used to track the query workers.
     *
     * Process 'ps' state and log should output all of them.
     *
     * Node name is default to 'role + hostname'.
     */
	char        name[CDB_NODE_IDENTITY_NAME_LENGTH];

	/* Allocate during register. */
	int         id;

    /* Cache our self information. */
    bool        master_address_set;
    char        master_host[CDB_NODE_IDENTITY_NAME_LENGTH];
    int         master_port;

    //SegmentFunctionList function;
    ProcessIdentity     pid;
} CdbNodeIdentity;


extern void SetCdbNodeIdentity(const char *name);

#endif
